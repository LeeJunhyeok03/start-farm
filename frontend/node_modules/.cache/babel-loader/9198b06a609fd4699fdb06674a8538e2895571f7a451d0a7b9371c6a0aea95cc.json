{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jun\\\\Desktop\\\\Start-farm\\\\the-Trinity\\\\frontend\\\\src\\\\screens\\\\Clean.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaLeaf } from \"react-icons/fa6\";\nimport fetcher from \"../fetcher.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Clean() {\n  _s();\n  const [data, setData] = useState([]);\n  const [num, setNum] = useState(null); // Initialize num state\n\n  const getMessages = async () => {\n    const fetchedData = await fetcher(\"get\", \"/town/ranking/\");\n    setData(fetchedData);\n    console.log(fetchedData);\n  };\n  useEffect(() => {\n    getMessages();\n    console.log('서버 연결 완료');\n    console.log(data);\n  }, []);\n  useEffect(() => {\n    // This effect runs whenever data changes\n    // Use the data to find the num value based on village name\n    if (data.length > 0) {\n      const targetVillage = \"신평마을\"; // Replace with the village name you're looking for\n      const foundVillage = data.find(regionData => regionData[1].some(villageData => villageData[1] === targetVillage));\n      if (foundVillage) {\n        const villageIndex = foundVillage[1].findIndex(villageData => villageData[1] === targetVillage);\n        setNum(villageIndex + 1); // Adding 1 because array index is 0-based\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC2E0\\uD3C9\\uB9C8\\uC744\\uC758 \\uC21C\\uC704\\uB294 \", num !== null ? `${num}위` : \"알 수 없음\", \" \\uC785\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Clean, \"OPG5VTAAKOvLJ+XDCLyhQ2wgDMA=\");\n_c = Clean;\nvar _c;\n$RefreshReg$(_c, \"Clean\");","map":{"version":3,"names":["React","useState","useEffect","FaLeaf","fetcher","jsxDEV","_jsxDEV","Clean","_s","data","setData","num","setNum","getMessages","fetchedData","console","log","length","targetVillage","foundVillage","find","regionData","some","villageData","villageIndex","findIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jun/Desktop/Start-farm/the-Trinity/frontend/src/screens/Clean.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaLeaf } from \"react-icons/fa6\";\r\nimport fetcher from \"../fetcher.js\";\r\n\r\nexport default function Clean() {\r\n    const [data, setData] = useState([]);\r\n    const [num, setNum] = useState(null); // Initialize num state\r\n\r\n    const getMessages = async () => {\r\n        const fetchedData = await fetcher(\"get\", \"/town/ranking/\");\r\n        setData(fetchedData);\r\n        console.log(fetchedData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n        console.log('서버 연결 완료');\r\n        console.log(data);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // This effect runs whenever data changes\r\n        // Use the data to find the num value based on village name\r\n        if (data.length > 0) {\r\n            const targetVillage = \"신평마을\"; // Replace with the village name you're looking for\r\n            const foundVillage = data.find((regionData) =>\r\n                regionData[1].some((villageData) => villageData[1] === targetVillage)\r\n            );\r\n            if (foundVillage) {\r\n                const villageIndex = foundVillage[1].findIndex((villageData) => villageData[1] === targetVillage);\r\n                setNum(villageIndex + 1); // Adding 1 because array index is 0-based\r\n            }\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <main>\r\n            {/* Your JSX content */}\r\n            <p>신평마을의 순위는 {num !== null ? `${num}위` : \"알 수 없음\"} 입니다.</p>\r\n        </main>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtC,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,WAAW,GAAG,MAAMV,OAAO,CAAC,KAAK,EAAE,gBAAgB,CAAC;IAC1DM,OAAO,CAACI,WAAW,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EAC5B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZW,WAAW,CAAC,CAAC;IACbE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIO,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;MACjB,MAAMC,aAAa,GAAG,MAAM,CAAC,CAAC;MAC9B,MAAMC,YAAY,GAAGV,IAAI,CAACW,IAAI,CAAEC,UAAU,IACtCA,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAAC,CAAC,CAAC,KAAKL,aAAa,CACxE,CAAC;MACD,IAAIC,YAAY,EAAE;QACd,MAAMK,YAAY,GAAGL,YAAY,CAAC,CAAC,CAAC,CAACM,SAAS,CAAEF,WAAW,IAAKA,WAAW,CAAC,CAAC,CAAC,KAAKL,aAAa,CAAC;QACjGN,MAAM,CAACY,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9B;IACJ;EACJ,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC;EAEV,oBACIH,OAAA;IAAAoB,QAAA,eAEIpB,OAAA;MAAAoB,QAAA,GAAG,oDAAU,EAACf,GAAG,KAAK,IAAI,GAAI,GAAEA,GAAI,GAAE,GAAG,QAAQ,EAAC,sBAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEf;AAACtB,EAAA,CArCuBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}